%% LyX 2.2.3 created this file.  For more info, see http://www.lyx.org/.
%% Do not edit unless you really know what you are doing.
\documentclass[11pt,letterpaper,american,english]{scrartcl}
\usepackage{lmodern}
\renewcommand{\sfdefault}{lmss}
\renewcommand{\ttdefault}{lmtt}
\usepackage[T1]{fontenc}
\usepackage[latin9]{inputenc}
\setlength{\parskip}{\medskipamount}
\setlength{\parindent}{0pt}

\makeatletter

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% LyX specific LaTeX commands.
\special{papersize=\the\paperwidth,\the\paperheight}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Textclass specific LaTeX commands.
\newenvironment{lyxcode}
{\par\begin{list}{}{
\setlength{\rightmargin}{\leftmargin}
\setlength{\listparindent}{0pt}% needed for AMS classes
\raggedright
\setlength{\itemsep}{0pt}
\setlength{\parsep}{0pt}
\normalfont\ttfamily}%
 \item[]}
{\end{list}}
\providecommand*{\code}[1]{\texttt{#1}}

\@ifundefined{date}{}{\date{}}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% User specified LaTeX commands.
\usepackage[includehead,includefoot,
margin=1in,
rmargin=1in,
tmargin=0.75in,
bmargin=1.0in,
headheight=0pt,
headsep=0pt,
marginparwidth=0pt,
footskip=1.5\baselineskip,
]{geometry}

\usepackage{multicol}
\usepackage{listings}
\usepackage{graphicx}
\usepackage{xcolor}
\usepackage[yyyymmdd,hhmmss]{datetime}


\lstset{tabsize=2, breaklines=true, 
  breakatwhitespace=true,
  %language=R,
  captionpos=b,
  frame=single,
  framerule=0.2pt,
  framesep=1pt,
  % numbers=left,% not in reports
  % numberstyle=\tiny,%not in reports
  numbersep=5pt,
  showstringspaces=false,
  basicstyle=\footnotesize,
  identifierstyle=,
  keywordstyle=\bfseries,
  commentstyle=\color{darkgreen},
  stringstyle=,
  backgroundcolor=\color[gray]{0.935}
}


\usepackage{dcolumn}
\usepackage{booktabs}
\usepackage{multicol}

%% PJ 20161110
%% I want to use listings in the document and I want nice/same as knitr.
%% Does knitr provide all of these settings for other listing uses outside
%% weaved part?
\usepackage{fancyvrb}
\fvset{listparameters={\setlength{\topsep}{0em}}}
\usepackage{listings}
\def\Sweavesize{\normalsize} 
\def\Rcolor{\color{black}} 
\def\Rbackground{\color[gray]{0.95}}
\providecommand{\Rcolor}{\color[rgb]{0, 0.5, 0.5}}
%%\providecommand{\Routcolor}{\color[rgb]{0.461, 0.039, 0.102}}
\providecommand{\Routcolor}{\color[rgb]{1.0, 0.0, 0.0}}
\providecommand{\Rcommentcolor}{\color[rgb]{0.101, 0.043, 0.432}}

\providecommand{\Rbackground}{\color[gray]{0.95}}
\providecommand{\Routbackground}{\color[gray]{0.80}}
% Can specify \color[gray]{1} for white background or just \color{white}


\lstdefinestyle{Rstyle}{fancyvrb=false,
                        frame=none,
                        escapechar=`,
                        language=R,%
                        basicstyle={\Rcolor\Sweavesize},%
                        backgroundcolor=\Rbackground,%
                        showstringspaces=false,%
                        keywordstyle=\Rcolor,%
                        commentstyle={\Rcommentcolor\ttfamily\itshape},%
                        literate={<<-}{{$\twoheadleftarrow$}}2{~}{{$\sim$}}1{<=}{{$\leq$}}2{>=}{{$\geq$}}2{^}{{$^{\scriptstyle\wedge}$}}1,%
                        alsoother={$},%
                        alsoletter={.<-},%
                        otherkeywords={!,!=,~,$,*,\&,\%/\%,\%*\%,\%\%,<-,<<-,/},%
                        escapeinside={(*}{*)}}%

\lstset{tabsize=2, breaklines=true, style=Rstyle}



\input{theme/reportPreambleHeader.tex}
\input{theme/preambleFooter.tex}
\input{theme/preambleFloatCenter.tex}
%% Load Hyperref, don't let LyX do this
\input{theme/reportPreambleKnitr.tex}

\makeatother

\usepackage{babel}
\usepackage{listings}
\addto\captionsamerican{\renewcommand{\lstlistingname}{Listing}}
\addto\captionsenglish{\renewcommand{\lstlistingname}{Listing}}
\renewcommand{\lstlistingname}{Listing}

\begin{document}
%% Fill in values of the arguments here, 
%% If blanks are needed, must insert value " ~ "
%% If comma needed inside value, wrap in {}.
%% Delete secondauthor and thirdauthor if not needed
\reportsetup{%
  firstauthor={
    lastname=Sullivan,
    firstname=Meghan, 
    affiliation=CRMDA,
    email=first@ku.edu},
 secondauthor={
    lastname=Author, 
    firstname=Second, 
    affiliation=CRMDA, 
    email=second@ku.edu},
  thirdauthor={
    lastname=Author, 
    firstname=Third, 
    affiliation=i, 
    email=third@ku.edu}, 
  title={Another Very Long Title: With a Possibly Long Subtitle},
  rightlogo={theme/CRMDAlogo.pdf},
}
\reporthdr

<<include=FALSE, echo=FALSE>>=
if(!dir.exists("tmpout"))dir.create("tmpout", recursive = TRUE)
@

<<knitr10,include=FALSE,echo=FALSE>>=
library(knitr)
opts_chunk$set(fig.path='tmpout/t-', split=TRUE, ae=FALSE, comment=NA,
               fig.height=5, fig.width=6)
@

\selectlanguage{american}%
<<texcopy, include=FALSE>>=
library(crmda)
## If theme directory does not have required images or TeX files
## we need to retrieve them and put them in "theme" directory. 
logos <- c(logoright = "CRMDAlogo.pdf")
texfiles <- c("reportPreambleHeader.tex", 
              "preambleFooter.tex", 
              "preambleFloatCenter.tex",  
              "addressFooter.tex",
              "reportPreambleKnitr.tex")
getFiles(logos, pkg = "crmda")
getFiles(texfiles, pkg = "crmda")
@

\selectlanguage{english}%
<<Roptions, echo=FALSE>>=
opts.orig <- options()
options(device = pdf)
options(width=160, prompt=" ", continue="  ")
options(useFancyQuotes = FALSE) 
set.seed(12345)
pdf.options(onefile=FALSE, family="Times", pointsize=10)
@

This is a LaTeX ``noweb'' report generated with the knitr engine.
We had a working document using Sweave and the listings class (via
the Sweavel LaTeX package). This is migrated from that to use knitr.
Some elements are still not well integrated, it is very tough for
me to be sure which argument in the preamble are actually relevant
to knitr and which are relevant to listings by itself.

The syntax for knitr code chunks is only slightly different than the
syntax for Sweave chunks. Many of the options are identical. The syntax
for a code chunk in both cases is like so
\begin{lyxcode}
$<<$chunkname, eval=TorF, include=TorF, echo=TorF$>>=$

\# R code here

@
\end{lyxcode}
where by ``\code{TorF}'' I mean you can choose either T or F. These
arguments are allowed in either knitr or Sweave, they are the ones
I use most often. Briefly:
\begin{description}
\item [{1.~echo:}] when the chunk is processed, the R code will be displayed
along with the output
\item [{2.~include:}] the chunk is evaluated, but neither the echo nor
the results are displayed
\item [{3.~eval:}] if F, the chunk is not sent to the R session, but it
is checked for correctness of code at compile time.
\end{description}
The difference with knitr is partly due to a larger set of legal flags
but also because knitr provides different functions to handle the
document processing. One benefit of knitr is that, at least in theory,
it can be used to write about other kinds of programs. I've used it
to write about the BASH shell, for example. 

\textbf{CAUTION}: This template document has some special features
in the preamble. Most importantly, it has margins that are set. The
LyX graphical menu (Document -> Settings -> margins) will break these
defaults. So don't change the page margins or the pagestyle. Other
than that, I don't know of any settings that are fatal.

Over the years, I have benefitted a great deal from the ``automatic
document with integrated results'' from Sweave. I have found this
most beneficial in the preparation of course notes and slides. 

I do not find it quite so beneficial in the preparation of reports.
Here is the main issue. The ``automatic'' ``self-documenting''
report is almost never exactly correct. It requires some ``finger
painting''. Perhaps that would not be true in the perfect world,
if we were perfect programmers, but I don't live in a perfect world.
In that case, I am willing to settle for a very good second best alternative.
I have learned to export result files from R which can be included
in documents easily, so the documents are easily updated and revised.
They may not be completely automatic because I leave open the possibility
that I might need to adjust a figure's size or a part of a table's
markup.

The magic bullet in that is the ``split'' option for Sweave, which
knitr for LaTeX also supports. If split=T, then the individual code
chunks and their results are saved in separate files. Here we save
them in a directory called ``tmpout''.

What is the difference between a guide and a report? Simply put, a
report document does not reveal source code and it should not distract
the reader with code. A report document might just as well be typed
by hand, if we could be sure all the numbers would be typed correctly
and they could easily revised. 

<<m1, include=F>>=
dat <- data.frame(x = rnorm(100), y = rnorm(100))
m1 <- lm(y ~ x, data = dat)
summary(m1)
@

In a report, we do not usually have R output in the raw form

\input{tmpout/t-m1.tex}

That is output from knitr's code decoration setup, incidentally. I'd
rather not have the color coded R code and I don't want light gray
output. Those are settings we need to fix before we go much further
down this road.

In a report, we do not want R code or output, we want a professional-looking
table. This table may not be perfect by APA standards, but it is certainly
good enough for our reports. 

<<outreg1, echo=F, results='asis'>>=
library(rockchalk)
vl <- c("x" = "Excellent Predictor")
or <- outreg(list("First Model" = m1), varLabels = vl, tight = FALSE)
cat(or)
@

There is an unsolved style problem. This is more relevant to guide
documents, which do show R code, than it is to reports, which generally
do not. I have not been able to exactly match the visual appearance
of R code and output from knitr with the output of the LaTeX listings
class. I wish that listings objects that are not produced from knitted
chunks would look same. The following is output from LaTeX Listings.
Note: 

\begin{lstlisting}
x <- rnorm(100)
y <- rpois(100, lambda = 2)
plot(y ~ x)
\end{lstlisting}

Ah, I see it is not the same because I did not get my listing settings
in my preamble exactly the same as what knitr uses. How to fix? I
wish I could adjust the knitr settings so I don't hate the output,
then I want to change the listings settings so they are similar.

Maybe I can get a GRA to fix.

If I put in another chunk, maybe I will see a pattern in the LaTeX
code.

<<>>=
summary(dat)
@

In the kutils package, we made a function semTable that is intended
to help with nice looking. Usually, we want a bigger table in a floating
element. Please see Table \ref{tab:A-Confirmatory-Factor}. In the
preamble of this document, I have some boilerplate code that causes
content in floating tables and figures to be centered automatically.
This looks nice!

<<include=F>>=
library(kutils)
require(lavaan)
@

<<cfa1, echo=F, include=F>>=
HS.model <- 'visual  =~ x1 + x2 + x3
textual =~ x4 + x5 + x6
speed   =~ x7 + x8 + x9'
output1 <- cfa(HS.model, data = HolzingerSwineford1939, std.lv = TRUE)
@

<<cfa3, echo=F, include=F,results='asis'>>=
cfa1 <- semTable(output1, fits = "rmsea", paramSets = c("loadings", "latentvariances"), type = "latex")
cat(cfa1)
@

\begin{table}

\caption{A Confirmatory Factor Analysis Table\label{tab:A-Confirmatory-Factor}}

\input{tmpout/t-cfa3.tex}
\end{table}

<<RoptionsRestore, echo=F, include=F>>=
## Don't delete this. It puts the interactive session options
## back the way they were. If this is compiled within a session
## it is vital to do this.
options(opts.orig)
@
\end{document}
