#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass extarticle
\begin_preamble
%\VignetteIndexEntry{stationery}
%\VignetteEngine{Sweave}
%\VignetteBuilder{stationery::rnw2pdf}
% Don't remove next commented line, its needed to fool Sweave
%\usepackage{Sweave}

\usepackage[includehead,includefoot,
lmargin=1in,
rmargin=1in,
tmargin=0.75in,
bmargin=1.0in,
headheight=0pt,
headsep=0pt,
marginparwidth=0pt,
footskip=1.5\baselineskip,
]{geometry}

\usepackage{dcolumn}
\usepackage{booktabs}


\input{theme/reportPreambleSweavel.tex}
\input{theme/reportPreambleHeader.tex}
\input{theme/preambleFooter.tex}
\end_preamble
\use_default_options false
\begin_modules
logicalmkup
sweave
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 11
\spacing single
\use_hyperref false
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle false
\papersize letterpaper
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\justification true
\use_refstyle 0
\branch R
\selected 0
\filename_suffix 0
\color #faf0e6
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\noindent
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
reportsetup{%
\end_layout

\begin_layout Plain Layout

  author={
\end_layout

\begin_layout Plain Layout

    lastname=Johnson,
\end_layout

\begin_layout Plain Layout

    firstname=Paul E., 
\end_layout

\begin_layout Plain Layout

    affiliation=Director{,}~CRMDA,
\end_layout

\begin_layout Plain Layout

    email=pauljohn@ku.edu},
\end_layout

\begin_layout Plain Layout

  title={stationery Package Overview: Guides, Slides, and Reports},
\end_layout

\begin_layout Plain Layout

  rightlogo={theme/logo.pdf},
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout


\backslash
reporthdr
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<include=FALSE,echo=FALSE, results=hide>>=
\end_layout

\begin_layout Plain Layout

if(!dir.exists("tmpout"))dir.create("tmpout", recursive = TRUE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% Please leave this code: In document Latex options:
\end_layout

\begin_layout Plain Layout


\backslash
fvset{listparameters={
\backslash
setlength{
\backslash
topsep}{0em}}}
\end_layout

\begin_layout Plain Layout


\backslash
SweaveOpts{prefix.string=tmpout/t, split=FALSE, ae=FALSE, height=5, width=6}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<texcopy, include=FALSE,echo=FALSE,results=hide>>=
\end_layout

\begin_layout Plain Layout

library(stationery)
\end_layout

\begin_layout Plain Layout

## If theme directory does not have required images or TeX files
\end_layout

\begin_layout Plain Layout

## we need to retrieve them and put them in "theme" directory.
 
\end_layout

\begin_layout Plain Layout

logos <- c(logoright = "logo.pdf", 
\end_layout

\begin_layout Plain Layout

"addressFooter.tex", "preambleFooter.tex")
\end_layout

\begin_layout Plain Layout

getFiles(logos, pkg = "stationery")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% Please leave this chunk
\end_layout

\begin_layout Plain Layout

<<Roptions, echo=F, include=F, results=hide>>=
\end_layout

\begin_layout Plain Layout

if(!dir.exists("tmpout"))dir.create("tmpout", recursive = TRUE)
\end_layout

\begin_layout Plain Layout

opts.orig <- options()
\end_layout

\begin_layout Plain Layout

options(device = pdf)
\end_layout

\begin_layout Plain Layout

options(width=160, prompt=" ", continue="  ")
\end_layout

\begin_layout Plain Layout

options(useFancyQuotes = FALSE) 
\end_layout

\begin_layout Plain Layout

set.seed(12345)
\end_layout

\begin_layout Plain Layout

par.orig <- par(no.readonly=TRUE) 
\end_layout

\begin_layout Plain Layout

pjmar <- c(5.1, 5.1, 1.5, 2.1) 
\end_layout

\begin_layout Plain Layout

options(SweaveHooks=list(fig=function() par(mar=pjmar, ps=10)))
\end_layout

\begin_layout Plain Layout

pdf.options(onefile=FALSE, family="Times", pointsize=10)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Abstract
\noindent
The stationery package offers working examples for preparation of 
\begin_inset Quotes eld
\end_inset

reproducible research
\begin_inset Quotes erd
\end_inset

 documents.
 It demonstrates how one can create and customize the style of both markdown
 and LaTeX documents.
 These formats utilize R's 
\begin_inset Quotes eld
\end_inset

code chunk
\begin_inset Quotes erd
\end_inset

 processing technology, so that code that creates figures and tables can
 be embedded into the document itself.
 The package includes 8 document templates.
 The vignettes that accompany the package provide elementary explanations
 of the formats and how they differ in practice.
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
\begin_inset Quotes eld
\end_inset

Reproducible research documents?
\begin_inset Quotes erd
\end_inset

 A university administrator recently exclaimed, 
\begin_inset Quotes eld
\end_inset

I have no idea what that means!
\begin_inset Quotes erd
\end_inset

 Many members of the faculty seem to have have the same response.
 The 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
stationery
\end_layout

\end_inset

 package for R may help would-be users to get started.
\end_layout

\begin_layout Standard
The 
\emph on
big idea
\emph default
 is to replace the traditional 
\begin_inset Quotes eld
\end_inset

cut and paste
\begin_inset Quotes erd
\end_inset

 approach to creating research reports with a program-driven documentation
 system that blends calculations with report preparation.
 Researchers who have been using word processors are aware of the danger
 that computer code, output tables, and graphs can fall out of alignment
 over time.
 Proponents of the 
\emph on
reproducible research documents
\emph default
 movement (
\begin_inset CommandInset citation
LatexCommand citealp
key "leisch2002,xie_bookdown:_2016,xie_dynamic_2015,stodden_implementing_2014"

\end_inset

) ask us to change our workflow in a fundamental way, so that analysis,
 code, and output work together more seamlessly.
 
\end_layout

\begin_layout Standard
In my experience, the benefits of this change are most apparent in class
 notes and slides.
 A chronic problem for teachers is a misalignment of computer code and output
 in course materials.
 It is easy to forget to paste in an updated graph or modify a table.
 With a reproducible document, there less danger that the computer code
 being discussed will not match the output that is presented because they
 are all part of one piece.
 
\end_layout

\begin_layout Standard
For most word-processor-using researchers, the transition is jarring.
 First, the software for document authoring is being replaced.
 MS Word is, simply put, insufficient.
 Second, the format in which documents are stored and revised is replaced.
 Third, the methods of statistical analysis that used to seem separate from
 authoring (SAS, SPSS, etc) are now supposed to be integrated with it.
\end_layout

\begin_layout Standard
In the 
\emph on
new way
\emph default
 of doing things, we avoid typing tables or pasting in graphs.
 The analysis software will prepare article-ready tables and graphs that
 can be put to use with no revision.
 In the ideal case, an entire article, lecture, or book can be generated
 in one single execution that conducts analysis, saves graphics, and assembles
 them together in the output document.
 This is in line with the 
\begin_inset Quotes eld
\end_inset

literate programming
\begin_inset Quotes erd
\end_inset

 movement started by computer scientist Donald Knuth (
\begin_inset CommandInset citation
LatexCommand citeyear
key "knuth_literate_1984,knuth_texbook_1984"

\end_inset

), who also created the TeX document preparation system.
 The statistical program R 
\begin_inset CommandInset citation
LatexCommand citep
key "RCore"

\end_inset

 built its documentation framework on the literate programming philosophy,
 integrating Knuth's concepts of 
\begin_inset Quotes eld
\end_inset

weaving
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

tangling
\begin_inset Quotes erd
\end_inset

 to produce documents and extract code files 
\begin_inset CommandInset citation
LatexCommand citep
key "leisch2002"

\end_inset

.
 
\end_layout

\begin_layout Standard
Once we understand that 
\emph on
big idea
\emph default
, then comes a series of rude shocks.
 First, 
\emph on
there are several competing formats for doing this kind of work
\emph default
.
 Not only do they want to change the way they work, but we have to decipher
 several alternatives and select one.
 The 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
stationery
\end_layout

\end_inset

 package tries to help with that, by offering working examples for several
 different file types.
 Our original work was done with LaTeX in mind.
 We offer documents in both 
\begin_inset Quotes eld
\end_inset

raw
\begin_inset Quotes erd
\end_inset

 LaTeX and LyX (
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
url{http://www.lyx.org}
\end_layout

\end_inset

), a graphical user interface for LaTeX.
 We also explore opportunities in markdown format.
 Proponents of markdown are attempting to develop a simpler, more human-readable
 document format.
 The leading voice has been John Gruber, whose Daring Fireball website (https://
daringfireball.net/projects/markdown) offered the first working set of guidelines
 for markdown documents.
 The markdown movement was advanced significantly by John MacFarlane's ambitious
 software program 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
pandoc
\end_layout

\end_inset

 
\begin_inset CommandInset citation
LatexCommand citeyearpar
key "MacFarlane"

\end_inset

, a format translator.
\end_layout

\begin_layout Standard
The other shock coming for new users is that the format of the output is
 much more difficult to customize than we expect in word processor software.
 The 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
stationery
\end_layout

\end_inset

 package is intended to ease the frustration by providing templates that
 are visually appealing.
 These templates offer a starting point for customization of new styles.
\end_layout

\begin_layout Standard
Before proceeding to the discussion of the package, some key terms should
 be well understood.
\end_layout

\begin_layout Description

\series bold
front
\begin_inset space ~
\end_inset

end: 
\series default
the format in which a document is prepared.
 Markdown files are saved with a suffix 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
.Rmd
\end_layout

\end_inset

, while the LaTeX files that include code chunks are saved as 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
.Rnw
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Description

\series bold
back
\begin_inset space ~
\end_inset

end: 
\series default
the delivered format.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
In this context, it is a bit vague to say 
\emph on
front end
\emph default
 because each document is converted through several formats in the compilation
 process.
 Any intermediate format that precedes another might be edited directly
 and treated as a front end by an author.
\end_layout

\end_inset

 The back ends considered here are Adobe portable document format (PDF)
 and hypertext markup language (HTML).
 
\end_layout

\begin_layout Description
code
\begin_inset space ~
\end_inset

chunk: A segment of R code that is embedded in a LaTeX or markdown document.
\end_layout

\begin_layout Description
style: the description of the back end's format.
 Our examples compare pedagogical guides, formal reports, and slides as
 styles.
\end_layout

\begin_layout Description
skeleton: a minimum working example that an author can revise into an essay.
\end_layout

\begin_layout Description
weave: to replace code chunks with output, preparing for compilation of
 a report (synonym of 
\begin_inset Quotes eld
\end_inset

knit
\begin_inset Quotes erd
\end_inset

).
\end_layout

\begin_layout Description
tangle: to extract code chunks into a free standing computer program (synonym
 of 
\begin_inset Quotes eld
\end_inset

purl
\begin_inset Quotes erd
\end_inset

).
\end_layout

\begin_layout Section
What Do You Get with stationery?
\end_layout

\begin_layout Standard
The 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
stationery
\end_layout

\end_inset

 package includes examples for eight types of documents (see Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Document-Types"

\end_inset

).
 The document types result from 
\begin_inset Quotes eld
\end_inset

mixing and matching
\begin_inset Quotes erd
\end_inset

 of various front ends, back ends, and document styles.
 We hope that authors who are accustomed to writing on stationery, with
 a pleasant header and footer, will find satisfactory results.
 Each document style includes theme files that can be revised to suit the
 author's needs.
 While it is not easy to create these style templates, we believe it will
 be easier for others succeed if they start from the examples we offer.
 
\end_layout

\begin_layout Standard
The package also provides functions to initialize skeleton documents and
 convert them to a desired back end.
 
\end_layout

\begin_layout Standard
Finally, there are vignettes, one of which is the present document, which
 serves as a package overview.
 In addition, we have vignettes named
\end_layout

\begin_layout Enumerate
Code Chunks: compares Sweave and knitr style code chunks.
\end_layout

\begin_layout Enumerate
R markdown: explores key elements in the newest front end document framework.
\end_layout

\begin_layout Enumerate
HTML Special Features: a tour of the promise and peril of using HTML as
 a back end for markdown documents.
\end_layout

\begin_layout Subsection*
\begin_inset Flex Code
status open

\begin_layout Plain Layout
stationery
\end_layout

\end_inset

 package document templates
\end_layout

\begin_layout Standard
In Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Document-Types"

\end_inset

, readers will note that the document formats have three-part names like
 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
rnw2pdf-guide-sweave
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
 The first part of the name has the format 
\emph on
frontend
\emph default
2
\emph on
backend.

\emph default
 The 
\begin_inset Quotes eld
\end_inset

rnw
\begin_inset Quotes erd
\end_inset

 prefix is for LaTeX files (suffixes to be explained below) and the 
\begin_inset Quotes eld
\end_inset

pdf
\begin_inset Quotes erd
\end_inset

 is the output type.
 The middle part of the format label is either 
\begin_inset Quotes eld
\end_inset

guide
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

report
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

slides
\begin_inset Quotes erd
\end_inset

.
 For document types that can be used with either 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
Sweave
\end_layout

\end_inset

 or 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
knitr
\end_layout

\end_inset

 code chunks, it is necessary to add a third part in the name (R markdown
 documents cannot use the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
Sweave
\end_layout

\end_inset

 engine).
 
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Document Types in Stationery
\begin_inset CommandInset label
LatexCommand label
name "tab:Document-Types"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="1in">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Formats
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Frontend
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Backend
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Style
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Code Chunk Engine
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rmd2html-guide
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Markdown
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
HTML
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Guide
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
knitr
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rmd2pdf-guide
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Markdown
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PDF
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Guide
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
knitr
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
 rmd2pdf-report
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Markdown
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PDF
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Report
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
knitr
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rnw2pdf-guide-knit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Markdown
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PDF
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Guide
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
knitr
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rnw2pdf-guide-sweave
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
LaTeX/LyX
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PDF
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Guide
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sweave
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rnw2pdf-report-knit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
LaTeX/LyX
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PDF
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Report
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
knitr
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rnw2pdf-report-sweave
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
LaTeX/LyX
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PDF
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Report
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sweave
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rnw2pdf-slides-sweave
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
LaTeX/LyX
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PDF
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Slides
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sweave
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Compiling a Reproducible Research Document
\begin_inset CommandInset label
LatexCommand label
name "fig:Compiling"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename importfigs/docproc-01.pdf

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The process of converting a reproducible document from front end to back
 end is referred to as compiling.
 It is always a multi-step process which we illustrate in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Compiling"

\end_inset

.
 Because the process can fail at any step, users are well advised to keep
 this fact in mind.
\end_layout

\begin_layout Standard
Between the front end and the back end we have intermediate files that are
 created (and just as quickly erased).
 One of the aims in software development is to make the transition process
 into an automatic, seamless process.
 The software design challenge is to retain some flexibility and respect
 for user input.
 It seems, almost invariably, that the software designer's idea of making
 this into a seamless process is to impose limitations on the author's ability
 to format and customize the document.
\end_layout

\begin_layout Standard
LaTeX authors are used to editing .tex files, but .tex is usually an intermediate
 format in this work.
 When code chunks are included, a document is usually given the suffix .Rnw,
 which is then converted into a .tex file by the chunk converter.
 (If one is editing a 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
LyX
\end_layout

\end_inset

 file, the converter will export to .Rnw as a first step.) The intermediate
 LaTeX must be compiled (usually by 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
pdflatex
\end_layout

\end_inset

, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
texi2pdf
\end_layout

\end_inset

, or similar programs).
 An R markdown document, which has the suffix .Rmd, can be prepared with
 various back ends in mind (we concentrate on PDF and HTML back ends, but
 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
pandoc
\end_layout

\end_inset

 can be used to convert markdown other formats, like MS Word.) 
\end_layout

\begin_layout Standard
There is a meaningful difference between the programs that are used for
 compiling documents written in LaTeX and pandoc.
 The LaTeX programs do not provide command-line options to change the look-and-f
eel of results.
 In contrast, the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
pandoc
\end_layout

\end_inset

 program offers command line options that can over-ride many settings within
 the document.
 At the final stage of processing an R markdown document, for example, we
 usually arrive at a call to 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
pandoc
\end_layout

\end_inset

 that has a somewhat elaborate format.
 
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "breaklines=true,showstringspaces=false,tabsize=1"
inline false
status open

\begin_layout Plain Layout

$ /usr/bin/pandoc +RTS -K512m -RTS crmda.utf8.md --to latex --from
\end_layout

\begin_layout Plain Layout

markdown+autolink_bare_uris+ascii_identifiers+tex_math_single_backslash
 
\end_layout

\begin_layout Plain Layout

--table-of-contents --toc-depth 2 
\end_layout

\begin_layout Plain Layout

--template theme/report-boilerplate.tex 
\end_layout

\begin_layout Plain Layout

--highlight-style haddock --latex-engine pdflatex --listings
\end_layout

\end_inset


\end_layout

\begin_layout Standard
If one has created tens or 100s of documents, the ability to re-style them
 in a script, rather than revising each of the individual documents, is
 an advantage.
\end_layout

\begin_layout Subsection*
Incorporating computer code
\end_layout

\begin_layout Standard
Whether one is editing in an LaTeX or a markdown file, there will be code
 chunks.
 In markdown documents, code chunks are bracketed by tick marks:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

```{r chunkname, options}
\end_layout

\begin_layout Plain Layout

code here
\end_layout

\begin_layout Plain Layout

```
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In LaTeX documents, code chunks are represented differently:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=C"
inline false
status open

\begin_layout Plain Layout

 <<chunkname, options>>=
\end_layout

\begin_layout Plain Layout

 code here
\end_layout

\begin_layout Plain Layout

 @
\end_layout

\end_inset


\end_layout

\begin_layout Standard
One of the pivotal stages in document compilation is the conversion of code
 chunks into formats suitable for inclusion in the document.
 At this point, we arrive at a somewhat unhappy situation because there
 are competing programs and terminology.
 Knuth referred to the chunk conversion process as 
\begin_inset Quotes eld
\end_inset

weaving
\begin_inset Quotes erd
\end_inset

.
 The base R framework refers to chunk conversion as 
\begin_inset Quotes eld
\end_inset

Sweaving
\begin_inset Quotes erd
\end_inset

 (because S was the precursor to R; 
\begin_inset CommandInset citation
LatexCommand citet
key "leisch2002"

\end_inset

).
 The newer 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
knitr
\end_layout

\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "xie_knitr"

\end_inset

 package for R refers to the chunk-conversion process as 
\begin_inset Quotes eld
\end_inset

knitting
\begin_inset Quotes erd
\end_inset

, although it is doing the same work as Sweaving.
 Another problem in terminology is that Knuth used the unlikely term 
\begin_inset Quotes eld
\end_inset

tangle
\begin_inset Quotes erd
\end_inset

 to refer to extraction of code chunks to create a 
\begin_inset Quotes eld
\end_inset

free standing
\begin_inset Quotes erd
\end_inset

 program (a program document separate from the commentary).
 Base R refers to that by the name 
\begin_inset Quotes eld
\end_inset

Stangle
\begin_inset Quotes erd
\end_inset

 while 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
knitr
\end_layout

\end_inset

 package calls it 
\begin_inset Quotes eld
\end_inset

purling
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Standard
In LaTeX documents, computer code can be displayed in various ways.
 The traditional method was the LaTeX environment 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
Verbatim
\end_layout

\end_inset

, but a more flexible alternative is the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
Listings
\end_layout

\end_inset

 package.
 Our PDF documents use the Listings class.
 Our style documents include example settings that authors can revise if
 they want to adjust the shading, line numbering, or other characteristics.
 
\end_layout

\begin_layout Section
Quick Start
\end_layout

\begin_layout Subsection
Create a starter 
\begin_inset Quotes eld
\end_inset

skeleton
\begin_inset Quotes erd
\end_inset

 document
\end_layout

\begin_layout Standard
The stationery package provides 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
initWriteup
\end_layout

\end_inset

, a function to create simple ready-to-compile examples.
 Here we will illustrate creation of an R markdown guide that will have
 a HTML back end.
 Start R in a folder where you would like to create a write-up and run
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

library(stationery)
\end_layout

\begin_layout Plain Layout

initWriteup(type = "rmd2pdf-report")
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This creates a folder named 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rmd2pdf-report
\end_layout

\end_inset

 in which one should find 
\end_layout

\begin_layout Enumerate
a skeleton template, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
skeleton.Rmd
\end_layout

\end_inset

,
\end_layout

\begin_layout Enumerate
an instructional guide, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
instructions.Rmd
\end_layout

\end_inset

,
\end_layout

\begin_layout Enumerate
a compiler script, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rmd2pdf.sh
\end_layout

\end_inset

,
\end_layout

\begin_layout Enumerate
a subdirectory 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
theme
\end_layout

\end_inset

, in which a template and some other configuration files are to be copied.
\end_layout

\begin_layout Standard
The return from 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
initWriteup
\end_layout

\end_inset

 will indicate the full path to the new directory:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "style=Routput"
inline false
status open

\begin_layout Plain Layout

[1] "/home/pauljohn/wherever_you_say/rmd2pdf-report"
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Most users will rename 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
skeleton.Rmd
\end_layout

\end_inset

 to something more suitable.
 Here we discuss an example named 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
crmda.Rmd
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
There are other ways to create a document.
 We have formatted the folder structure of the package in a way that is
 consistent with the template format required by RStudio (http://www.rstudio.com),
 as specified by the package 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rmarkdown
\end_layout

\end_inset

; 
\begin_inset CommandInset citation
LatexCommand citealp
key "Allaire_rmarkdown"

\end_inset

).
 
\end_layout

\begin_layout Standard
For our markdown-based formats (sadly, not for the LaTeX based formats),
 the RStudio graphical interface will work as well.
 A user can open the File menu, choose New File -> R Markdown -> From Template.
 The formats 
\begin_inset Quotes eld
\end_inset

rmd2html guide
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

rmd2pdf report
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

rmd2pdf guide
\begin_inset Quotes erd
\end_inset

 should be available.
 The 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rmarkdown
\end_layout

\end_inset

 function 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
draft()
\end_layout

\end_inset

 performs exactly the same purpose.
 One could run
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

library(rmarkdown)
\end_layout

\begin_layout Plain Layout

draft("crmda.Rmd", template = "rmd2pdf-report", package = "stationery", create_di
r = FALSE)
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
How to Compile a Document
\end_layout

\begin_layout Standard
While editing a document, authors are well advised to heed the advice:
\end_layout

\begin_layout Quote
Compile early, compile often!
\end_layout

\begin_layout Standard
Users should try to compile our document before changing it.
 While revising the document, it is wise to compile often and notice errors
 as soon as they are committed.
\end_layout

\begin_layout Standard
The file can be compiled in several ways.
 
\end_layout

\begin_layout Enumerate
Use shell commands
\end_layout

\begin_deeper
\begin_layout Standard
For the sake of completeness, we begin with the most basic method: run commands
 in a terminal.
 For a LaTeX file, such as 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
crmda.Rnw
\end_layout

\end_inset

, this is straightforward.
 First, convert the code chunks to R input:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ R CMD Sweave crmda.Rnw
\end_layout

\end_inset


\end_layout

\begin_layout Standard
That creates 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
crmda.tex
\end_layout

\end_inset

, which is then converted to PDF output: 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ texi2pdf crmda.tex
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The command line options to compile a file with knitr code chunks is a bit
 more elaborate.
 I generally use the R functions or shell scripts described next.
 
\end_layout

\end_deeper
\begin_layout Enumerate
Open an R session and use the functions 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rmd2pdf()
\end_layout

\end_inset

, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rmd2html()
\end_layout

\end_inset

, and 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rnw2pdf()
\end_layout

\end_inset

 in the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
stationery
\end_layout

\end_inset

 package.
 
\end_layout

\begin_deeper
\begin_layout Standard
These functions will compile files that are saved in the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
.lyx
\end_layout

\end_inset

, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
.Rnw
\end_layout

\end_inset

, and 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
.Rmd
\end_layout

\end_inset

 formats.
 For example, 
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "style=Rinput"
inline false
status open

\begin_layout Plain Layout

library(stationery)
\end_layout

\begin_layout Plain Layout

rmd2pdf("crmda.Rmd")
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This orchestrates a two part process that involves functions in the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rmarkdown
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
knitr
\end_layout

\end_inset

 packages.
 The document header is scanned and then a suitable document format object
 is created.
 The heavy lifting is done by the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
pdf_document
\end_layout

\end_inset

 or 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
html_document
\end_layout

\end_inset

 functions in the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rmarkdown
\end_layout

\end_inset

 package.
 After that, intermediate documents must be rendered to the final result.
 The benefit of using the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
stationery
\end_layout

\end_inset

 functions is that they will review the in-document format settings, but
 can override them with function parameters.
 For example, one can control the creation of a table of contents by including
 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
toc: true
\end_layout

\end_inset

 in the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
.Rmd
\end_layout

\end_inset

 document, or by running 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
pdf_document
\end_layout

\end_inset

 with the parameter 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
toc = TRUE
\end_layout

\end_inset

.
 Any of the document parameters can be selectively replaced.
 
\end_layout

\begin_layout Standard
As a use case, suppose we write three R markdown documents and we forget
 to specify the depth of the table of contents.
 Rather than editing each individual document to insert 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
toc_depth:1
\end_layout

\end_inset

, we might instead specify the depth as an R function argument:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<usage110, eval=F>>=
\end_layout

\begin_layout Plain Layout

rmd2pdf(c("crmda1.Rmd", "crmda2.Rmd", "crmda3.Rmd"), toc = TRUE, toc_depth
 = 1)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Similarly, a template can be substituted by employing the template argument,
 such as 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
template = "theme/report-newboilerplate.tex"
\end_layout

\end_inset

 .
\end_layout

\begin_layout Standard
There are differences in format between the values in the markdown document
 preamble and the R function call.
 R uses 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
TRUE
\end_layout

\end_inset

 , 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
FALSE
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
NULL
\end_layout

\end_inset

 where markdown uses lower case 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
true
\end_layout

\end_inset

 , 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
false
\end_layout

\end_inset

, and 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
null
\end_layout

\end_inset

.
\end_layout

\end_deeper
\begin_layout Enumerate
Run the shell script provided with the template.
\end_layout

\begin_deeper
\begin_layout Standard
The document skeleton is provided with a compiler script.
 It can do the same work as 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rmd2pdf
\end_layout

\end_inset

 inside R.
 The same output can be generated by running a command line script that
 does the same work.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ ./rmd2pdf.sh crmda.Rmd
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The compiler script is designed to accept the same arguments as the function
 rmd2pdf, but in the command line it is a little tricky to specify the options
 because we have to protect quotation marks from interpretation.
 For example, here we enclose double quotes in single quotes:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ ./rmd2pdf.sh --toc=TRUE --toc_depth=1 --template='"theme/report-newboilerplate.te
x"' crmda.Rmd
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
If editing in 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
RStudio
\end_layout

\end_inset

, there is a button 
\begin_inset Graphics
	filename importfigs/RStudio-knit.png
	width 1.5cm

\end_inset

 that has a small triangular widget.
 This should be used with 
\emph on
extreme caution
\emph default
 because it can alter the document preamble.
 
\end_layout

\begin_deeper
\begin_layout Standard
In the preamble of the markdown document, there will be an output stanza.
 This if from our skeleton for 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rmd2pdf
\end_layout

\end_inset

 guide documents.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

output: 
\end_layout

\begin_layout Plain Layout

  pdf_document:
\end_layout

\begin_layout Plain Layout

    citation_package: natbib
\end_layout

\begin_layout Plain Layout

    fig_caption: yes
\end_layout

\begin_layout Plain Layout

    latex_engine: pdflatex
\end_layout

\begin_layout Plain Layout

    highlight: haddock
\end_layout

\begin_layout Plain Layout

    pandoc_args: [
\end_layout

\begin_layout Plain Layout

        --listings
\end_layout

\begin_layout Plain Layout

    ]
\end_layout

\begin_layout Plain Layout

    template:  theme/guide-boilerplate.tex
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
RStudio
\end_layout

\end_inset

 triangular widget offers a selection of document back ends.
 Be careful to choose 
\begin_inset Quotes eld
\end_inset

Knit to PDF
\begin_inset Quotes erd
\end_inset

.
 If the user makes a mistake and selects, say, 
\begin_inset Quotes eld
\end_inset

Knit to HTML
\begin_inset Quotes erd
\end_inset

, then 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
RStudio
\end_layout

\end_inset

 will replace the output stanza in the document.
 It will insert its best guesses about settings for 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
html_document
\end_layout

\end_inset

.
 When 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
RStudio
\end_layout

\end_inset

 inserts its best guess, it sometimes corrupts the format of the other output
 types and the document will fail to compile.
 
\end_layout

\begin_layout Standard
In our rmd2html documents, the output format is controlled by a function
 in 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
stationery
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

output:
\end_layout

\begin_layout Plain Layout

  stationery::crmda_html_document:
\end_layout

\begin_layout Plain Layout

    toc: true
\end_layout

\begin_layout Plain Layout

    toc_depth: 2
\end_layout

\begin_layout Plain Layout

    highlight: haddock
\end_layout

\begin_layout Plain Layout

    theme: default
\end_layout

\begin_layout Plain Layout

    citation_package: natbib
\end_layout

\begin_layout Plain Layout

    css: theme/kutils.css
\end_layout

\begin_layout Plain Layout

    template: theme/guide-boilerplate.html
\end_layout

\end_inset


\end_layout

\begin_layout Standard
New versions of 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
RStudio
\end_layout

\end_inset

 will notice that the intended format is controlled by 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
crmda_html_document
\end_layout

\end_inset

 and offer a choice 
\begin_inset Quotes eld
\end_inset

Knit to crmda_html_document
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Section
Styling for Documents
\end_layout

\begin_layout Subsection
Reports versus Guides
\end_layout

\begin_layout Standard
The 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
stationery
\end_layout

\end_inset

 package document template are intended to have consistent 
\begin_inset Quotes eld
\end_inset

look and feel
\begin_inset Quotes erd
\end_inset

 across document fron ends.
 A guide document may be produced with an HTML back end, or in PDF, with
 either Sweave or knitr chunk processing engines.
 The same is true for report documents produced by Sweave and knitr.
 To the extent possible, the color schemes and arrangement of header and
 footer information should be similar (if not identical).
 
\end_layout

\begin_layout Standard
The stationery package includes two document styles, dubbed 
\begin_inset Quotes eld
\end_inset

guide
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

report
\begin_inset Quotes erd
\end_inset

.
 The difference between these two is not hard-and-fast.
 A 
\series bold
guide
\series default
 is usually prepared as a teaching document.
 It may end up in a Webpage, where more color rather than less is expected.
 It is usually a less formal document.
 The final presentation is likely to include computer code and output excerpts.
 The guide format is are usually intended for education and training, but
 it is possible to use the guide style for other types of documents.
 The header is a three column structure with organizational and/or departmental
 logos on either side (see Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Markdown-Output"

\end_inset

 for an example).
 
\end_layout

\begin_layout Standard
A 
\series bold
report
\series default
 is a more formal document.
 Its first page includes a header and a footer with organizational address
 information (see Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Latex-Report"

\end_inset

).
 The header and footer appear only on the first page.
 It is more is suitable for preparation of a report to clients or a draft
 of a journal article.
 A report typically has less (maybe no) code and almost never will it include
 "raw output" from a computer program.
 A report includes tables and figures that are in a (nearly) publishable
 format.
 This document is prepared with the report template, but we do have some
 
\begin_inset Quotes eld
\end_inset

raw
\begin_inset Quotes erd
\end_inset

 code examples.
\end_layout

\begin_layout Standard
The slide format is based on LaTeX Beamer (??) slide format using a customized
 theme that features the colors of our institution.
 Our slides use the Sweave engine.
 We have experimented with many slide producing strategies using markdown
 code and none of them have been dependable, so we set that aside for the
 moment.
\end_layout

\begin_layout Subsection
Distinctive Headers and Footers
\end_layout

\begin_layout Standard
In the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
stationery
\end_layout

\end_inset

 package, we provide enhanced headers (and footers where appropriate) that
 incorporate organizational graphics and address information.
 Document templates are provided for that purpose.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Latex Output (Report Document)
\begin_inset CommandInset label
LatexCommand label
name "fig:Latex-Report"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Header
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename importfigs/rnw2pdf-report-header.png
	width 80text%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Footer
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename importfigs/rnw2pdf-report-footer.png
	width 80text%

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The markdown format introduced some interesting concepts to streamline document
 creation, so we begin with a markdown document's preamble.
 As exemplified in Listing 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{lis:markdown1}
\end_layout

\end_inset

, the markdown document begins with a section, written in YAML format, that
 species the title.
 A standard set of parameters is specified by 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
pandoc
\end_layout

\end_inset

, but additional parameters can be provided by our template and also by
 the R functions that compile the document.
 In this case, the parameters like 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
affiliation
\end_layout

\end_inset

, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
email
\end_layout

\end_inset

, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
l1
\end_layout

\end_inset

 through 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
r3
\end_layout

\end_inset

, and the logo image files, are specified by our template.
 Many additional details about working with markdown are spelled out in
 the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
stationery
\end_layout

\end_inset

 vignette 
\begin_inset Quotes eld
\end_inset

R markdown Basics.
\begin_inset Quotes erd
\end_inset

 The header and footer created from the document are presented in Figure
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Markdown-Output"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "float=ht,caption={Beginning of a markdown preamble},label={lis:markdown1},captionpos=t"
inline false
status open

\begin_layout Plain Layout

---
\end_layout

\begin_layout Plain Layout

title: "A Title for Template"
\end_layout

\begin_layout Plain Layout

subtitle: "rmd2pdf-guide"
\end_layout

\begin_layout Plain Layout

guidenum: 00
\end_layout

\begin_layout Plain Layout

guideurl: https://crmda.ku.edu/guides
\end_layout

\begin_layout Plain Layout

keywords: R markdown, R, documents
\end_layout

\begin_layout Plain Layout

author:
\end_layout

\begin_layout Plain Layout

- name: First Author
\end_layout

\begin_layout Plain Layout

  affiliation: CRMDA
\end_layout

\begin_layout Plain Layout

  email: first@ku.edu
\end_layout

\begin_layout Plain Layout

- name:  Second Author
\end_layout

\begin_layout Plain Layout

  affiliation: CRMDA
\end_layout

\begin_layout Plain Layout

  email: second@ku.edu
\end_layout

\begin_layout Plain Layout

addr:
\end_layout

\begin_layout Plain Layout

    l1: address row 1
\end_layout

\begin_layout Plain Layout

    l2: address row 2
\end_layout

\begin_layout Plain Layout

    l3: City State Zipcode
\end_layout

\begin_layout Plain Layout

    r1: "Web: http://crmda.ku.edu"
\end_layout

\begin_layout Plain Layout

    r2: "Email: author@ku.edu"
\end_layout

\begin_layout Plain Layout

    r3: "Phone: 123-345-5678"
\end_layout

\begin_layout Plain Layout

logoleft: theme/logoleft.pdf
\end_layout

\begin_layout Plain Layout

logoright: theme/logo-vert.pdf
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Markdown Output (Guide Document) 
\begin_inset CommandInset label
LatexCommand label
name "fig:Markdown-Output"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Header
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename importfigs/rmd2pdf-header.png
	width 80text%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Footer
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename importfigs/rmd2pdf-footer.png
	width 80text%

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
One of the benefits of the markdown preamble is that one can specify a authors
 in a flexible way, providing one or more names that are gracefully handled
 during the rendering process.
\end_layout

\begin_layout Standard
In LaTeX, the tools to specify title and author information are not as flexible.
 The problem is solved by some LaTeX functions in our templates.
 These use recent innovations in the LaTeX programming interface.
 (Packages consistent with TexLive 2016 or newer will be required).
 The top portion of the LaTeX document, where we expect the author to include
 the metadata, is illustrated in Listing 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{lis:latex1}.
\end_layout

\end_inset

 The input format is similar to the markdown format, but there are slight
 differences due to inherent differences in technology.
 However, the output is the same (see Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:LaTeX-Output"

\end_inset

).
 The LaTeX format allows us to keep the footer information–the address–in
 a separate file, so it need not be typed into each individual document
 (markdown does not allow that).
 
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "float=h,caption={LaTeX header information},label={lis:latex1},captionpos={t}"
inline false
status open

\begin_layout Plain Layout


\backslash
guidesetup{
\end_layout

\begin_layout Plain Layout

  author={
\end_layout

\begin_layout Plain Layout

    lastname=Author, 
\end_layout

\begin_layout Plain Layout

    firstname=First, 
\end_layout

\begin_layout Plain Layout

    affiliation=CRMDA,
\end_layout

\begin_layout Plain Layout

    email=first@ku.edu},
\end_layout

\begin_layout Plain Layout

  author={
\end_layout

\begin_layout Plain Layout

    lastname=Author, 
\end_layout

\begin_layout Plain Layout

    firstname=Second, 
\end_layout

\begin_layout Plain Layout

    affiliation=CRMDA, 
\end_layout

\begin_layout Plain Layout

    email=second@ku.edu}, 
\end_layout

\begin_layout Plain Layout

  url={https://crmda.ku.edu/guides},
\end_layout

\begin_layout Plain Layout

  keywords={single-authoring, just one},
\end_layout

\begin_layout Plain Layout

  title={A Title for Skeleton Template: rnw2pdf-guide-sweave},
\end_layout

\begin_layout Plain Layout

  leftlogo={theme/logoleft.pdf},
\end_layout

\begin_layout Plain Layout

  rightlogo={theme/logo-vert.pdf},
\end_layout

\begin_layout Plain Layout

  number=00,
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout


\backslash
guidehdr
\end_layout

\begin_layout Plain Layout

%footer information in theme/addressFooter.tex
\end_layout

\begin_layout Plain Layout


\backslash
footersetup{
\end_layout

\begin_layout Plain Layout

  leftside={
\end_layout

\begin_layout Plain Layout

    lone={Address line 1}, 
\end_layout

\begin_layout Plain Layout

    ltwo={Address line 2}, 
\end_layout

\begin_layout Plain Layout

    lthree={City State Zipcode}},
\end_layout

\begin_layout Plain Layout

  rightside={
\end_layout

\begin_layout Plain Layout

    rone=Web: 
\backslash
url{https://crmda.ku.edu},
\end_layout

\begin_layout Plain Layout

    rtwo=Email: 
\backslash
href{mailto:you@where.edu}{
\backslash
url{you@where.edu}},
\end_layout

\begin_layout Plain Layout

    rthree=Phone: 123-345-5678}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
LaTeX Output (Guide Document) 
\begin_inset CommandInset label
LatexCommand label
name "fig:LaTeX-Output"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Header
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename importfigs/rnw2pdf-guide-header.png
	width 80text%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Footer
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename importfigs/rnw2pdf-guide-footer.png
	width 80text%

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Customization
\end_layout

\begin_layout Standard
Hopefully, authors do not have too much trouble filling in their names and
 titles.
 There are not too many 
\begin_inset Quotes eld
\end_inset

gotchas
\begin_inset Quotes erd
\end_inset

, but the use of illegal symbols for the intended back end may cause trouble.
 For example, LaTeX documents assign special meaning to symbols like 
\begin_inset Quotes eld
\end_inset

%
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

$
\begin_inset Quotes erd
\end_inset

, and 
\begin_inset Quotes eld
\end_inset

_
\begin_inset Quotes erd
\end_inset

 and these will need to be protected by a backslash.
 In documents intended for HTML, titles or author names that include reserved
 symbols such as 
\begin_inset Quotes eld
\end_inset

<
\begin_inset Quotes erd
\end_inset

 ,
\begin_inset Quotes erd
\end_inset

>
\begin_inset Quotes erd
\end_inset

, or 
\begin_inset Quotes eld
\end_inset

&
\begin_inset Quotes erd
\end_inset

 are likely to cause trouble and should be avoided.
 
\end_layout

\begin_layout Standard
As the example code illustrates, we assume the logo information is saved
 in files with names like 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
theme/logoleft.pdf
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
 Before first compiling our document, the author can copy image files into
 the theme directory to replace our defaults.
 If the author does not do so, the document compiler will retrieve the 
\begin_inset Quotes eld
\end_inset

plain white
\begin_inset Quotes erd
\end_inset

 image defaults and place them in the theme directory.
 Within the document, look for a code chunk like this which retrieves logo
 files.
 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

```{r themecopy, include = FALSE}
\end_layout

\begin_layout Plain Layout

library(stationery)
\end_layout

\begin_layout Plain Layout

logos <- c(logoleft = "logoleft.pdf", logoright = "logo-vert.pdf")
\end_layout

\begin_layout Plain Layout

getFiles(logos, pkg = "stationery")
\end_layout

\begin_layout Plain Layout

```
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
If authors expect to create many documents, it is possible to automate this
 process.
 One can create an R package to hold the logo information (we can supply
 a working example of a package named 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
crmda
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

).
 To pull logo information from the user's package, one will replace our
 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
pkg = "stationery"
\end_layout

\end_inset

 with 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
pkg = "your_pkg_name"
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Subsection
HTML themes and the file size problem
\end_layout

\begin_layout Standard
The output size of HTML files may be quite large, even if the document itself
 has almost no content.
 This problem arises because 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rmarkdown
\end_layout

\end_inset

 uses a theme set based on the bootstrap library ().
 If the markdown preamble does not specify a theme, or it specifies any
 theme except 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
null
\end_layout

\end_inset

, then a large amount of javascript and cascading style sheet data from
 bootstrap is inserted into the HTML header.
 This can take up to 700KB of storage.
 All of the other elements in the document, including its graphs and features,
 will take additional space.
 An R package that includes three HTML vignettes will exceed the CRAN limit
 on the size of packages.
 
\end_layout

\begin_layout Standard
Rather than editing the document over-and-over to see the effects of themes,
 we suggest instead either using the The 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
stationery
\end_layout

\end_inset

 package document template are intended to have consistent 
\begin_inset Quotes eld
\end_inset

look and feel
\begin_inset Quotes erd
\end_inset

 across formats.
 A guide document may be produced with an HTML back end, or in PDF, with
 either Sweave or knitr chunk processing engines.
 The same is true for report documents produced by Sweave and knitr.
 function or the x script.
 To prevent the use of a Bootstrap library theme, the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rmd2html
\end_layout

\end_inset

 function can be run like so.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

rmd2html("crmda.Rmd", theme=NULL)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
On the command line, the parameter value NULL should not be quoted:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ ./rmd2html.sh --theme=NULL crmda.Rmd
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The nearly empty 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
skeleton.Rmd
\end_layout

\end_inset

 provided with this package has a compiled size will be around 700KB.
 Preventing the insertion of the Bootstrap-based theme will reduce the HTML
 output file size to 62KB.
 (Note the author can insert 
\begin_inset Quotes eld
\end_inset

theme: null
\begin_inset Quotes erd
\end_inset

 in the markdown to prevent the use of a bootstrap theme (note that 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
null
\end_layout

\end_inset

 is neither capitalized nor quoted).
 Of course, the disadvantage of removing the theme is that the benefits
 of the theme are lost.
 In the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
stationery
\end_layout

\end_inset

 package, there is a vignette 
\begin_inset Quotes eld
\end_inset

HTML Special Features,
\begin_inset Quotes erd
\end_inset

 that explores these issues.
\end_layout

\begin_layout Standard
It is worth mentioning that there are many bootstrap themes (they are listed
 in the help page for 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rmarkdown::html_document
\end_layout

\end_inset

).
 One can explore the impact of these themes on the final document by running,
 for example, 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

rmd2html("crmda.Rmd", theme = "spacelab")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
or, from the command line,
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ ./rmd2html.sh --theme='"spacelab"' crmda.Rmd
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Troubleshooting
\end_layout

\begin_layout Standard
Documents often fail to compile.
 There are many failure points and one might need to inspect the intermediate
 files and output at several stages.
 When there is trouble, recompile with parameter values 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
clean = FALSE
\end_layout

\end_inset

, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
quiet = FALSE
\end_layout

\end_inset

, and either 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
keep_md = TRUE
\end_layout

\end_inset

 (for HTML output) or 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
keep_tex = TRUE
\end_layout

\end_inset

 (for PDF).
 By inspecting the intermediate files, editing them, and running the compiler
 commands again, one can usually find out what's wrong.
 During this process, it is beneficial to remember that the rendering process
 has separate stages, and each one can be run in isolation.
\end_layout

\begin_layout Standard
When 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
quiet = FALSE
\end_layout

\end_inset

, one of the especially important parts of the verbose output is the full
 command that is sent to 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
pandoc
\end_layout

\end_inset

.
 For example, compiling our minimal skeleton 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
crmda.Rmd
\end_layout

\end_inset

 yields this intimidating list of command line options
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize},breaklines=true,tabsize=2"
inline false
status open

\begin_layout Plain Layout

/usr/bin/pandoc +RTS -K512m -RTS crmda.utf8.md --to html4 --from markdown+autolink
_bare_uris+ascii_identifiers+tex_math_single_backslash --output crmda.html
 --smart --email-obfuscation none --self-contained --standalone --section-divs
 --table-of-contents --toc-depth 2 --template theme/guide-boilerplate.html
 --highlight-style haddock --css theme/kutils.css --variable 'theme:bootstrap'
 --include-in-header /tmp/RtmpU3qSFQ/R markdown-str33e24223b3a.html --mathjax
 --variable 'mathjax-url:https://mathjax.RStudio.com/latest/MathJax.js?config=TeX-A
MS-MML_HTMLorMML' --filter /usr/bin/pandoc-citeproc
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This converts an intermediate markdown document 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
crmda.utf8.md
\end_layout

\end_inset

 into 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
crmda.html
\end_layout

\end_inset

.
 The help page for pandoc lists the document parameters than can be specified
 in the command line (such as 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
--template
\end_layout

\end_inset

 or 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
--table-of-contents
\end_layout

\end_inset

.
\end_layout

\begin_layout Section
Choosing among formats
\end_layout

\begin_layout Standard
We provide 8 document formats because there are several acceptable methods.
 Each one has strengths and weaknesses.
 At the current time, there is a considerable amount of enthusiasm about
 markdown document preparation system.
 The markdown movement is the 
\begin_inset Quotes eld
\end_inset

bleeding edge,
\begin_inset Quotes erd
\end_inset

 literally, as the style for document markup and the development of software
 to convert documents into the final format is currently underway.
 The core program that handles markdown documents, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
pandoc
\end_layout

\end_inset

, is undergoing rapid development.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Frequent changes in 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
pandoc
\end_layout

\end_inset

 caused the RStudio program distribution to include a snapshot of 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
pandoc
\end_layout

\end_inset

 so that their example documents can be compiled in a predictable way.
 We are warned that our templates for 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
pandoc
\end_layout

\end_inset

 are likely to be made unworkable by revisions in the future and revisions
 will be necessary.
\end_layout

\end_inset

 On the other hand, the LaTeX-based approaches are time-tested and the compilers
 for them have existed for years.
 There are fewer surprises (bugs), but there are more details for authors
 to learn.
 
\end_layout

\begin_layout Standard
A long run goal in the development of markdown is to create a single document
 that can be compiled into various formats.
 At the current time, that is an 
\emph on
aspiration
\emph default
, not a reality.
 Authors who prepare documents intended for one format will generally use
 features that are fundamentally incompatible with the other formats.
 As a result, the choice of the back end must be made first, and after that
 one can choose among features in the front end that are compatible with
 the desired result.
 Where you want to end up determines where you start.
\end_layout

\begin_layout Standard
To sort through these considerations, the right place to start is the actually
 the desired end of the writing process.
 After we figure out the end, we can concentrate on the beginning.
\end_layout

\begin_layout Subsection
Which back end?
\end_layout

\begin_layout Standard
Should I end up with HTML or PDF? The answer depends on the intended audience/cl
ient.
 If a "paper" must be submitted, choose PDF.
 If the document needs numbered equations, cross references, and "floating"
 tables and figures, choose PDF.
 If the document is intended for a Webpage, then choose HTML (although we
 prefer to PDF document via the Web in many cases).
 
\end_layout

\begin_layout Standard
HTML documents have hidden benefits and hidden costs.
 There is no free lunch.
 One can have features, but at the cost of large file sizes and (sometimes)
 unpredictable user experiences.
 Web browsers differ in their implementation of guidelines, javascript,
 and cascading style sheets.
 If one intends to convey a document in a replicable way to a wide audience
 using various kinds of computers, then PDF is the recommended format.
 The equations and figures are 
\begin_inset Quotes eld
\end_inset

in
\begin_inset Quotes erd
\end_inset

 the document and the author can be highly confident that they will have
 the same appearance across systems.
\end_layout

\begin_layout Standard
There are other limitations in HTML.
 There is no built-in method for display of mathematical equations.
 There have been efforts to ameliorate that problem over the years, the
 most recent of which is called MathJax (??).
 MathJax is a Web program that can be called when a user opens an HTML document.
 MathJax displays markup in a way that is similar to LaTeX output.
 However, in order for this to work, the conditions must be 
\begin_inset Quotes eld
\end_inset

just right
\begin_inset Quotes erd
\end_inset

.
 First, if the remote server that provides MathJax is unavailable, then
 the math in the document will not be rendered.
 Second, some special care is required to allow MathJax equations in HTML
 documents that are based on markdown templates.
 The stationery package includes a special document format function, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
crmda_html_document
\end_layout

\end_inset

, that circumvents the limitations.
\end_layout

\begin_layout Subsection
Which Frontend? Write in LaTeX or R markdown?
\end_layout

\begin_layout Standard
The original version of this document was prepared in R markdown that was
 compiled into HTML.
 There were several show-stopping flaws.
 The document was changed to LaTeX and PDF.
 Some features failed to compile, and some errors in my own code were silently
 ignored by the version of 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
pandoc
\end_layout

\end_inset

 that was available in 2017.
 When the back end format changed to PDF, several special features of the
 HTML back end had to be removed.
 (Again, there is no free lunch.)
\end_layout

\begin_layout Standard
Similarly, R packages that can generate output that works well in HTML do
 not generate similarly good LaTeX output.
 
\end_layout

\begin_layout Standard
I believe the following are good conclusions:
\end_layout

\begin_layout Enumerate
If one intends to export as HTML, then markdown is, *by far*, the most reasonabl
e choice for a frontend.
 Markdown was developed, first and foremost, as a simpler way to generate
 Web pages.
 There are converters that try to go from LaTeX to HTML, but in my experience,
 none of them preserve all of the features that are likely to exist in an
 even moderately complicated LaTeX document.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Tables and equations with cross references are almost always damaged in
 conversion.
\end_layout

\end_inset

 
\end_layout

\begin_layout Enumerate
If one intends to export to PDF, then markdown or  LaTeX  can be useful.
 But  LaTeX  is probably better.
  LaTeX  is primarily intended for the creation of publication-quality documents
 in PDF format.
 
\end_layout

\begin_layout Standard
Since one can put much (not all) LaTeX  markup into a markdown document,
 perhaps the difference is not so great as it seems.
 Because a markdown documents must be knitted, and then converted to LaTeX,
 and then to PDF, there is an 
\begin_inset Quotes eld
\end_inset

extra step
\begin_inset Quotes erd
\end_inset

 in translation that may corrupt some features.
 
\end_layout

\begin_layout Standard
The fact of life, at least at the current time, is that it is not painless
 to change the output format without making wholesale changes in the document
 fron tend.
 If one writes a markdown document, using special features intended for
 the back end, then it is generally not possible to, at the last minute,
 change the output format.
 HTML output has advantages in Web style features, while PDF documents have
 advantages in "on paper" presentations.
\end_layout

\begin_layout Subsection
Where does my editor fit into this?
\end_layout

\begin_layout Standard
We need an editor that allows the insertion of code chunks and has the ability
 to compile documents (recall Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Compiling"

\end_inset

).
 Microsoft Word is not a workable alternative, which is a source of concern
 for may social scientists.
\end_layout

\begin_layout Standard
I recommend LyX (http://www.lyx.org) to many LaTeX novices.
 It is a graphical interface for preparation of LaTeX documents.
 LyX can export LaTeX files and it offers some good tools to learn about
 how to write LaTeX.
 LyX was used to create the skeletons provided with 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
stationery
\end_layout

\end_inset

.
 We prepare the documents as .lyx files, and then export to an equivalent
 .Rnw file.
 
\end_layout

\begin_layout Standard
LyX offers many benefits, but it has one limitation (which all LaTeX editors
 will share).
 LyX allows us to enter code chunks in the document, but it does not offer
 a convenient way to test chunks and interact with an R session while we
 are writing the document.
 If one is editing in LyX (or in a LaTeX editor), the following shell commands
 can be used to convert the current document, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
stationery.lyx
\end_layout

\end_inset

, to pdf:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ lyx -e sweave stationery.lyx # creates a Rnw file
\end_layout

\begin_layout Plain Layout

$ R CMD Sweave stationery.Rnw # creates a tex file
\end_layout

\begin_layout Plain Layout

$ texi2pdf stationery.tex # creates pdf, could use pdflatex
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Compiling the LyX document has an 
\begin_inset Quotes eld
\end_inset

all or nothing
\begin_inset Quotes erd
\end_inset

 feel, where errors in R code will cause compilation to fail.
 One can edit an .Rnw file in any editor intended for LaTeX, of course, but
 those editors will have the same limitation that one cannot test R code
 chunks interactively.
\end_layout

\begin_layout Standard
One can instead edit the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
.Rnw
\end_layout

\end_inset

 or 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
.Rmd
\end_layout

\end_inset

 files with editors have an 
\begin_inset Quotes eld
\end_inset

inferior mode
\begin_inset Quotes erd
\end_inset

 that can start an interactive R session.
 The author can create a code chunk and test it interactively before trying
 to compile the whole document.
 There are several editors that have that ability.
 The venerable editor Emacs (??) offers ESS (Emacs Speaks Statistics) which
 is popular with experts for a number of reasons.
 Perceiving Emacs to be difficult to use, many novices enjoy RStudio, which
 has the ability to work with markdown or LaTeX files.
\end_layout

\begin_layout Standard
While working on the markdown documents in this package, we are struck by
 the fact that markdown is a movement, a 
\emph on
frame of mind
\emph default
, rather than a product.
 It is a rapidly moving target.
 Features are added and changed on a weekly basis, it is usually difficult
 to know what will work and what will not.
 That is to say, we are on the steeply sloped curve of technical innovation
 and there is no reason to expect it to stabilize in the near term.
 
\end_layout

\begin_layout Subsection
Should one prefer Sweave or knitr?
\end_layout

\begin_layout Standard
In R markdown, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
knitr
\end_layout

\end_inset

 is the only available method to process code chunks.
 There is no Sweave chunk engine for markdown.
\end_layout

\begin_layout Standard
For LaTeX docuements, we have the choice between the older 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
Sweave
\end_layout

\end_inset

 chunk framework or the newer 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
knitr
\end_layout

\end_inset

 framework.
 
\end_layout

\begin_layout Standard
knitr introduced a more fine-grained set of options for the chunks (see
 
\begin_inset Quotes eld
\end_inset

knitr code chunk options,
\begin_inset Quotes erd
\end_inset

 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://yihui.name/knitr/options
\end_layout

\end_inset

).
 
\end_layout

\begin_layout Standard
One benefit of R markdown with 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
knitr
\end_layout

\end_inset

 is that it is possible to make documents about other programs (not just
 R).
 I've explored knitr to weave documents about BASH shell programming, for
 example.
\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
The 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
stationery
\end_layout

\end_inset

 package is a snapshot survey of what is practical, here and now, for the
 preparation of reproducible research reports.
 There are some authors who take an extreme position that an entire research
 project, all phases in the analysis of data, should be wrapped together
 into a tightly wrapped bundle.
 At the current time, there are practical problems that prevent us from
 achieving this goal with perfect fidelity, but we can take some significant
 steps forward to integrate code and results into professionally acceptable
 guides and reports.
 
\end_layout

\begin_layout Standard
Authors who have used LaTeX, or written with LyX, will have some advantages
 as they enter this area.
 For those authors, it will be relatively easy to learn to insert code chunks
 and insert an extra step in the document compilation process.
 For authors that do not have LaTeX background, it seems certain that the
 R markdown format will be more appealing.
 It is easier to produce a rudimentary document with R markdown.
 That is to be expected, of course, since the markdown movement is propelled
 by a generalized rejection of ugly, tedious markup documents (either LaTeX
 or HTML).
\end_layout

\begin_layout Standard
Taking the details into account, however, we expect that authors that start
 with 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
.Rnw
\end_layout

\end_inset

 or 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
.Rmd
\end_layout

\end_inset

 files will likely encounter plenty of trouble as they try to integrate
 many appealing features.
 LaTeX equations, for example, can be included in either document format,
 but preparing them correctly is not easy.
 It is often frustrating to find that features that work well in one format
 are either unavailable or more difficult in the other framework.
 While there are many Websites touting examples of 
\begin_inset Quotes eld
\end_inset

pretty
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

elegant
\begin_inset Quotes erd
\end_inset

 documents, the these pages sometimes obscure the fact that their authors
 understand the compilation problems on a deeper level than the ordinary
 users.
 Those authors can more easily avoid pitfalls simply because they know,
 ahead of time, what will and won't work.
 This is especially true in the markdown community, because the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
pandoc
\end_layout

\end_inset

 program has a relatively long list of idiosyncrasies that the experts understan
d and avoid, while others are not so fortunate.
\end_layout

\begin_layout Standard
The experience in developing the examples provided with the package is that
 compiler tool chains are generally fragile and errors can be difficult
 to isolate and solve.
 The LyX authoring environment offers a very convenient way to rapidly move
 up the LaTeX learning curve, while it frustrates the author who wants to
 test code chunks while drafting a document.
 
\end_layout

\begin_layout Standard
Available under
\end_layout

\begin_layout Standard
[Created Commons license 3.0 <img src="http://crmda.dept.ku.edu/images/cc-3.0.png"
 alt="CC BY"
\end_layout

\begin_layout Standard
style="width: 75px;height: 20px;"/>](http://creativecommons.org/licenses/by/3.0/)
\end_layout

\begin_layout Section*
References
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "theme/R"
options "apalike2"

\end_inset


\end_layout

\begin_layout Subsection*
\begin_inset Note Note
status open

\begin_layout Subsection*
Session Info
\end_layout

\begin_layout Plain Layout
Session Information is usually not written into a report, but an output
 file is created by the following pieces.
 Please leave the next 2 chunks
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<sessioninfo, include=F>>=
\end_layout

\begin_layout Plain Layout

zz <- "stationery.Rout"
\end_layout

\begin_layout Plain Layout

capture.output(sessionInfo(), file = zz, append = FALSE)
\end_layout

\begin_layout Plain Layout

if (!is.null(warnings())){
\end_layout

\begin_layout Plain Layout

    capture.output(warnings(), file = zz, append =  TRUE)
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<RoptionsRestore, echo=F, include=F>>=
\end_layout

\begin_layout Plain Layout

## Don't delete this.
 It puts the interactive session options
\end_layout

\begin_layout Plain Layout

## back the way they were.
 If this is compiled within a session
\end_layout

\begin_layout Plain Layout

## it is vital to do this.
\end_layout

\begin_layout Plain Layout

options(opts.orig)
\end_layout

\begin_layout Plain Layout

par(par.orig)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_body
\end_document
